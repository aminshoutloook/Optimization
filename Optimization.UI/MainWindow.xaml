<Controls:MetroWindow x:Class="Optimization.UI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
                      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13" x:Name="mainWindow"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto" WindowState="Maximized" Height="800" Width="1100"
       GlowBrush="{DynamicResource AccentColorBrush}"
                      FontFamily="{StaticResource MaterialDesignFont}"
        mc:Ignorable="d" Background="{DynamicResource MaterialDesignPaper}" Title="Optimization"
                      xmlns:StoryboardManager="clr-namespace:Optimization.UI.Helpers">
    <Window.Resources>
        <Storyboard x:Key="StoryboardFadeOut" StoryboardManager:StoryboardManager.ID="StoryboardFadeOut">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.1500000" Value="0.4"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="StoryboardFadeIn" StoryboardManager:StoryboardManager.ID="StoryboardFadeIn">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.4"/>
                <SplineDoubleKeyFrame KeyTime="00:00:00.1500000" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="StoryboardShowWindow" StoryboardManager:StoryboardManager.ID="StoryboardShowWindow">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <SplineDoubleKeyFrame KeyTime="00:00:0.2" Value="0.3"/>
                <SplineDoubleKeyFrame KeyTime="00:00:0.4" Value="0.7"/>
                <SplineDoubleKeyFrame KeyTime="00:00:0.5" Value="1" KeySpline="0.705,0,0,1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="StoryboardHideWindow" StoryboardManager:StoryboardManager.ID="StoryboardHideWindow">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                <SplineDoubleKeyFrame KeyTime="00:00:0.3" Value="0.5"/>
                <SplineDoubleKeyFrame KeyTime="00:00:0.5" Value="0"/>
                <SplineDoubleKeyFrame KeyTime="00:00:01" Value="0" KeySpline="0.705,0,0,1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </Window.Resources>
    <Window.Triggers>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
         
        </EventTrigger>
    </Window.Triggers>
    <Window.InputBindings>
        <KeyBinding Key="F1" Command="{Binding HelpCommand}"/>
    </Window.InputBindings>
    <Grid x:Name="RootGrid">
        <materialDesign:DialogHost Identifier="RootDialog"
                                   SnackbarMessageQueue="{Binding ElementName=MainSnackbar, Path=MessageQueue}">
            <materialDesign:DrawerHost IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}">
                <materialDesign:DrawerHost.LeftDrawerContent >
                    <DockPanel MinWidth="212">
                        <ToggleButton Style="{StaticResource MaterialDesignHamburgerToggleButton}" 
                                    DockPanel.Dock="Top"
                                    HorizontalAlignment="Right" Margin="16"
                                    IsChecked="{Binding ElementName=MenuToggleButton, Path=IsChecked, Mode=TwoWay}" />
                        <ListBox x:Name="DemoItemsListBox" Margin="0 16 0 16" 
                             PreviewMouseLeftButtonUp="UIElement_OnPreviewMouseLeftButtonUp" SelectionChanged="DemoItemsListBox_SelectionChanged">
                            <ListBox.ItemTemplate>
                                <DataTemplate DataType="domain:DemoItem">
                                    <TextBlock Text="{Binding Name}" Margin="32 0 32 0" />
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </DockPanel>
                </materialDesign:DrawerHost.LeftDrawerContent>
                <DockPanel>
                    <materialDesign:ColorZone Padding="16" materialDesign:ShadowAssist.ShadowDepth="Depth2"
                                            Mode="PrimaryMid" DockPanel.Dock="Top">
                        <DockPanel>
                            <ToggleButton Style="{StaticResource MaterialDesignHamburgerToggleButton}" IsChecked="False"
                                        x:Name="MenuToggleButton"/>
                            <materialDesign:PopupBox DockPanel.Dock="Right" PlacementMode="BottomAndAlignRightEdges" StaysOpen="False">
                                <StackPanel x:Name="settingPane">
                                    <!--<Button Content="Hello World" Click="MenuPopupButton_OnClick"/>
                                    <Button Content="Nice Popup" Click="MenuPopupButton_OnClick"/>
                                    <Button Content="Can't Touch This" IsEnabled="False" />-->
                                    <Separator/>
                                    <Button x:Name="exitBtn" Content="Exit" Click="exitBtn_Click"/>
                                </StackPanel>
                            </materialDesign:PopupBox>
                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="22" 
                                   Text="{Binding ElementName=mainWindow,Path=Title}"></TextBlock>
                        </DockPanel>
                    </materialDesign:ColorZone>
                </DockPanel>
            </materialDesign:DrawerHost>
        </materialDesign:DialogHost>
    </Grid>
</Controls:MetroWindow>
